# cd-shortcuts                                      -*- shell-script -*-
_cd_shortcuts(){

    local let valid_words=0

    # discard parameters, count number of arguments and check for shortcut.
    for word in ${COMP_WORDS[@]}; do
        i="${word::1}"
        [[ "$i" != '-' ]] && let valid_words+=1
        [[ "$i" == '^' ]] && local shortcut='up' && local let level=${word:1}+0
        [[ "$i" == '@' ]] && local shortcut='at' && local target=${word:1}
    done

    if (( valid_words == 2 )); then

        # local variables
        local reply=''
        local path="$( pwd )"

        # check shortcut...
        case $shortcut in
            up)
                # read current path spliting it with '/'
                local path_temp
                IFS='/' read -a path_temp <<< "${path}"

                # how many levels it can up?
                local let max_level=$(( ${#path_temp[@]}-1 ))
                if (( level > 0 )) && (( level < max_level )); then
                    # create the tedious <dot><dot><slash> string...
                    for ((i=1; i<=level; i++)); do
                        reply+='../'
                    done

                    COMPREPLY="$reply"
                fi
                ;;

            at)
                # go to a specific directory (from the right to the left)...
                if [[ "${target}" != '' ]] &&\
                   [[ "$path" == *${target}* ]]; then
                    new_path="${path%${target}*}$target"
                    # ...but only if is a valid directory.
                    [[ -d "$new_path" ]] && COMPREPLY="$new_path"
                fi
                ;;
            *)
                # there is no shortcuts here, use standard completion
                _cd
                ;;
        esac
    else
        # there is no shortcuts here, use standard completion
        _cd
    fi
}
complete -F _cd_shortcuts cd

# ex: filetype=sh
