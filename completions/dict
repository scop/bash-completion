# dict(1) completion                                       -*- shell-script -*-

_dictdata()
{
    # shellcheck disable=SC2086
    dict $host $port $1 2>/dev/null | command sed -ne \
        's/^[[:blank:]]\{1,\}\([^[:blank:]]*\).*$/\1/p'
}

_comp_cmd_dict()
{
    local cur prev words cword comp_args
    _comp_initialize -- "$@" || return

    local host port db i

    local noargopts='!(-*|*[hpdis]*)'
    for ((i = 1; i < cword; i++)); do
        # shellcheck disable=SC2254
        case ${words[i]} in
            --host | -${noargopts}h)
                host=${words[++i]}
                [[ $host ]] && host="-h $host"
                ;;
            --port | -${noargopts}p)
                port=${words[++i]}
                [[ $port ]] && port="-p $port"
                ;;
            --database | -${noargopts}d)
                db=${words[++i]}
                [[ $db ]] && host="-d $db"
                ;;
        esac
    done

    if [[ $cur == -* ]]; then
        COMPREPLY=($(compgen -W '$(_parse_help "$1")' -- "$cur"))
        return
    fi

    # shellcheck disable=SC2254
    case $prev in
        --database | -info | -${noargopts}[di])
            COMPREPLY=($(compgen -W '$(_dictdata -D)' -- "$cur"))
            return
            ;;
        --strategy | -${noargopts}s)
            COMPREPLY=($(compgen -W '$(_dictdata -S)' -- "$cur"))
            return
            ;;
    esac

    local dictfile=/usr/share/dict/words
    if [[ -r $dictfile ]]; then
        # Dictfile may be too large for practical compgen -W usage, so narrow
        # it down with grep if $cur looks like something that's safe to embed
        # in a pattern instead.
        if [[ $cur == +([-A-Za-z0-9/.]) ]]; then
            COMPREPLY=($(compgen -W \
                '$(command grep "^${cur//./\\.}" $dictfile)' -- "$cur"))
        else
            COMPREPLY=($(compgen -W '$(cat $dictfile)' -- "$cur"))
        fi
    fi
} &&
    complete -F _comp_cmd_dict -o default dict rdict

# ex: filetype=sh
