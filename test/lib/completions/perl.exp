proc setup {} {
    save_env
}


proc teardown {} {
    assert_env_unmodified {/PERL5LIB=/d}
}


setup


assert_complete_any "perl "


sync_after_int


set test "Second argument should file complete"
set cmd "perl foo $::srcdir/fixtures/shared/default/f"
send "$cmd\t"
expect {
    -re "^$cmd\r\nfoo +foo.d/ *\r\n/@${cmd}oo$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


set test "-I without space should complete directories"
set cmd "perl -I$::srcdir/fixtures/shared/default/"
send "$cmd\t"
expect {
    -re "^$cmd\r\nbar bar.d/ +foo.d/ *\r\n/@$cmd$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


set test "-I with space should complete directories"
set cmd "perl -I $::srcdir/fixtures/shared/default/"
send "$cmd\t"
expect {
    -re "^$cmd\r\nbar bar.d/ +foo.d/ *\r\n/@$cmd$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


set test "-x without space should complete directories"
set cmd "perl -x$::srcdir/fixtures/shared/default/b"
send "$cmd\t"
expect {
    -re "^${cmd}ar\\\\ bar.d/ *$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


set test "-x with space should complete directories"
set cmd "perl -x $::srcdir/fixtures/shared/default/b"
send "$cmd\t"
expect {
    -re "^${cmd}ar\\\\ bar.d/ *$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


set test "- should complete options"
set options {
    -0 -a -c -C -d -D -e -F -h -i -I -l -m -M -n -p -P -s -S -T -u -U -v -V -w -W -x -X
}
assert_complete $options "perl -" $test


sync_after_int

assert_no_complete "perl -e "
sync_after_int

assert_complete_any "perl -V:install"
sync_after_int

assert_complete_any "perl -V::install"
sync_after_int

# Assuming that File::Spec and friends are always installed...

assert_complete_any "perl -MFile"
sync_after_int

assert_complete_any "perl -MFile::Sp"
sync_after_int

assert_complete_any "perl -MFile::Spec::Func"
sync_after_int

assert_complete_any "perl -M-File"
sync_after_int

assert_complete_any "perl -m-File::"
sync_after_int

# Make sure at least our mock Devel::* module is around
assert_bash_exec {OLDPERL5LIB=$PERL5LIB; export PERL5LIB=$TESTDIR/fixtures/perl}

assert_complete_any "perl -d:"
sync_after_int

assert_complete_any "perl -dt:"
sync_after_int

assert_bash_exec {export PERL5LIB=$OLDPERL5LIB; unset -v OLDPERL5LIB}

teardown
